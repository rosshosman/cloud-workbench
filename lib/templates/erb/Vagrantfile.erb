### Variables
benchmark_name = '<%= benchmark_name %>'
benchmark_name_sanitized = '<%= benchmark_name_sanitized %>'
benchmark_id = <%= benchmark_id %>
execution_id = <%= execution_id %>
chef_node_name = "#{execution_id}-#{benchmark_name_sanitized}"
tag_name = "cwb-#{benchmark_name_sanitized}"

# Private variables
vagrant_id = "cwb-#{benchmark_id}-#{execution_id}"
hostname = "cwb-#{execution_id}"
# Make variables visible in global scope
azure_common = nil
azure_id = nil
softlayer_id = nil

### Default configuration
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.hostname = hostname

  config.ssh.username = 'ubuntu'
  config.ssh.private_key_path = ENV['SSH_KEY_PATH']

  # Butcher plugin that removes Chef nodes and clients
  if Vagrant.has_plugin?('vagrant-butcher')
    config.butcher.verify_ssl = false
  end

  <% if provider_name == 'aws' %>
  # AWS box
  config.vm.box = 'aws'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'

  # AWS EC2 provider
  config.vm.provider :aws do |aws, override|
    # Fix for error in `vagrant-aws` plugin
    # https://github.com/mitchellh/vagrant/issues/5401#issuecomment-115240904
    override.nfs.functional = false

    # AWS authentication
    aws.access_key_id = ENV['AWS_ACCESS_KEY']
    aws.secret_access_key = ENV['AWS_SECRET_KEY']
    aws.keypair_name = ENV['SSH_KEY_NAME']

    # Official Ubuntu 14.04 LTS AMI (hvm:ebs-ssd)
    # from Canonical: https://cloud-images.ubuntu.com/locator/ec2/
    # trusty  server  release 20170405  ebs-ssd amd64 eu-west-1 ami-09447c6f      hvm
    aws.ami = 'ami-09447c6f'

    # AWS default instance configuration
    aws.instance_ready_timeout = 300 # seconds (default=120)
    aws.region = 'eu-west-1' # Europe/Ireland as default configuration
    aws.instance_type = 't2.micro'
    aws.security_groups = ['default']
    aws.tags = {
      'Name' => tag_name
    }
  end
  <% elsif provider_name == 'google' %>
  # Google box
  config.vm.box = 'google'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-google/raw/master/google.box'

  # Google Compute Engine provider
  config.vm.provider :google do |google, override|
    google.google_project_id = ENV['GOOGLE_PROJECT_ID']
    google.google_client_email = ENV['GOOGLE_CLIENT_EMAIL']
    google.google_key_location = ENV['GOOGLE_API_KEY_PATH']

    override.ssh.username = 'root'
    override.ssh.private_key_path = ENV['SSH_KEY_PATH']

    # Used to uniquely identify the VM
    google.name = vagrant_id
    google.metadata = {'vagrant_id' => vagrant_id}

    # Override provider defaults
    google.image = 'debian-7-wheezy-v20140619'
    google.machine_type = 'n1-standard-1'
    google.zone = 'europe-west1-a'
  end
  <% elsif provider_name == 'azure' %>
  # Azure box
  config.vm.box = 'azure'
  config.vm.box_url = 'https://github.com/msopentech/vagrant-azure/raw/master/dummy.box'

  # Eager initialized variables (outside the lazy evaluated Proc)
  vm_name = "cwb-#{execution_id}"
  service_name = "#{vm_name}-service"
  azure_id = "#{vm_name}@#{service_name}"

  azure_common = Proc.new do |azure, override|
    # Authentication
    azure.mgmt_endpoint = 'https://management.core.windows.net'
    azure.mgmt_certificate = ENV['AZURE_MGMT_CERTIFICATE_PATH']
    azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']
    azure.private_key_file = ENV['SSH_KEY_PATH']

    # Defaults
    azure.vm_name = vm_name
    azure.cloud_service_name = service_name
    azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140414-en-us-30GB'
    azure.vm_user = 'ubuntu'
    azure.vm_size = 'ExtraSmall'
    azure.vm_location = 'North Europe'
  end
  <% elsif provider_name == 'softlayer' %>
  softlayer_id = "cwb-#{execution_id}"

  # Softlayer box
  config.vm.box = 'softlayer'
  config.vm.box_url = 'https://github.com/audiolize/vagrant-softlayer/raw/master/dummy.box'

  config.ssh.username = 'root'

  config.vm.provider :softlayer do |sl|
    sl.username = ENV['SOFTLAYER_API_USERNAME']
    sl.api_key  = ENV['SOFTLAYER_API_KEY']
    sl.ssh_key  = ENV['SSH_KEY_NAME']

    sl.domain = 'cloud-workbench.io'
    sl.datacenter = 'mel01'
    sl.operating_system = 'UBUNTU_14_64'
  end
  <% end %>

  # Chef client provisioner
  config.omnibus.chef_version = ENV['CHEF_OMNIBUS_CHEF_VERSION']
  config.vm.provision 'cwb', type: 'chef_client' do |chef|
    chef.log_level = :info
    chef.provisioning_path = ENV['CHEF_PROVISIONING_PATH']
    chef.chef_server_url = ENV['CHEF_SERVER_URL']
    chef.validation_key_path = ENV['CHEF_VALIDATION_KEY_PATH']

    # MUST be unique in scope of all benchmarks
    chef.node_name = chef_node_name

    chef.run_list = %w(cwb)
    chef.json = {
      'cwb' => {
        'server' => ENV['CWB_SERVER_HOST'],
        'provider_name' => '<%= provider_name %>',
        'azure_id' => azure_id,
        'softlayer_id' => softlayer_id,
      }
    }
  end
end

###### BEGIN custom Vagrantfile ######
<%= vagrantfile %>
